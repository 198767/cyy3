# 1 "ln_helper.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "ln_helper.c"



# 1 "ln_helper.h" 1






# 1 "/usr/include/stdlib.h" 1 3 4
# 25 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 322 "/usr/include/features.h" 3 4
# 1 "/usr/include/bits/predefs.h" 1 3 4
# 323 "/usr/include/features.h" 2 3 4
# 355 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 353 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 354 "/usr/include/sys/cdefs.h" 2 3 4
# 356 "/usr/include/features.h" 2 3 4
# 387 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4



# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 5 "/usr/include/gnu/stubs.h" 2 3 4


# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 388 "/usr/include/features.h" 2 3 4
# 26 "/usr/include/stdlib.h" 2 3 4







# 1 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 1 3 4
# 211 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 3 4
typedef unsigned int size_t;
# 323 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 3 4
typedef int wchar_t;
# 34 "/usr/include/stdlib.h" 2 3 4








# 1 "/usr/include/bits/waitflags.h" 1 3 4
# 43 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/bits/waitstatus.h" 1 3 4
# 65 "/usr/include/bits/waitstatus.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/endian.h" 1 3 4
# 38 "/usr/include/endian.h" 2 3 4
# 61 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/byteswap.h" 1 3 4
# 28 "/usr/include/bits/byteswap.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/bits/byteswap.h" 2 3 4
# 62 "/usr/include/endian.h" 2 3 4
# 66 "/usr/include/bits/waitstatus.h" 2 3 4

union wait
  {
    int w_status;
    struct
      {

 unsigned int __w_termsig:7;
 unsigned int __w_coredump:1;
 unsigned int __w_retcode:8;
 unsigned int:16;







      } __wait_terminated;
    struct
      {

 unsigned int __w_stopval:8;
 unsigned int __w_stopsig:8;
 unsigned int:16;






      } __wait_stopped;
  };
# 44 "/usr/include/stdlib.h" 2 3 4
# 68 "/usr/include/stdlib.h" 3 4
typedef union
  {
    union wait *__uptr;
    int *__iptr;
  } __WAIT_STATUS __attribute__ ((__transparent_union__));
# 96 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 140 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__)) ;




extern double atof (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (__const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;





extern float strtof (__const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

extern long double strtold (__const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;





extern long int strtol (__const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

extern unsigned long int strtoul (__const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;




__extension__
extern long long int strtoq (__const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

__extension__
extern unsigned long long int strtouq (__const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;





__extension__
extern long long int strtoll (__const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

__extension__
extern unsigned long long int strtoull (__const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

# 311 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__)) ;


extern long int a64l (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;




# 1 "/usr/include/sys/types.h" 1 3 4
# 28 "/usr/include/sys/types.h" 3 4


# 1 "/usr/include/bits/types.h" 1 3 4
# 28 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 131 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 132 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef long int __swblk_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;

__extension__ typedef int __ssize_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 31 "/usr/include/sys/types.h" 2 3 4



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;
# 61 "/usr/include/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;
# 99 "/usr/include/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 133 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 58 "/usr/include/time.h" 3 4


typedef __clock_t clock_t;



# 74 "/usr/include/time.h" 3 4


typedef __time_t time_t;



# 92 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 104 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 134 "/usr/include/sys/types.h" 2 3 4
# 147 "/usr/include/sys/types.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 1 3 4
# 148 "/usr/include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 195 "/usr/include/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 220 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/sys/select.h" 1 3 4
# 31 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/bits/select.h" 1 3 4
# 23 "/usr/include/bits/select.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 24 "/usr/include/bits/select.h" 2 3 4
# 32 "/usr/include/sys/select.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 24 "/usr/include/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 35 "/usr/include/sys/select.h" 2 3 4



typedef __sigset_t sigset_t;





# 1 "/usr/include/time.h" 1 3 4
# 120 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    long int tv_nsec;
  };
# 45 "/usr/include/sys/select.h" 2 3 4

# 1 "/usr/include/bits/time.h" 1 3 4
# 75 "/usr/include/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 47 "/usr/include/sys/select.h" 2 3 4


typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 67 "/usr/include/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 99 "/usr/include/sys/select.h" 3 4

# 109 "/usr/include/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 121 "/usr/include/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);



# 221 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/sysmacros.h" 1 3 4
# 30 "/usr/include/sys/sysmacros.h" 3 4
__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     __attribute__ ((__nothrow__));
# 224 "/usr/include/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 271 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 24 "/usr/include/bits/pthreadtypes.h" 2 3 4
# 50 "/usr/include/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


typedef union
{
  char __size[36];
  long int __align;
} pthread_attr_t;
# 67 "/usr/include/bits/pthreadtypes.h" 3 4
typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;





typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;





    int __kind;





    unsigned int __nusers;
    __extension__ union
    {
      int __spins;
      __pthread_slist_t __list;
    };

  } __data;
  char __size[24];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{
# 170 "/usr/include/bits/pthreadtypes.h" 3 4
  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;


    unsigned char __flags;
    unsigned char __shared;
    unsigned char __pad1;
    unsigned char __pad2;
    int __writer;
  } __data;

  char __size[32];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[20];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 272 "/usr/include/sys/types.h" 2 3 4



# 321 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) __attribute__ ((__nothrow__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));






extern int rand (void) __attribute__ ((__nothrow__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__));




extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__));







extern double drand48 (void) __attribute__ ((__nothrow__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    unsigned long long int __a;
  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));









extern void *malloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__));




extern void cfree (void *__ptr) __attribute__ ((__nothrow__));



# 1 "/usr/include/alloca.h" 1 3 4
# 25 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 1 3 4
# 26 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__));






# 498 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;




extern void abort (void) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
# 531 "/usr/include/stdlib.h" 3 4





extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern void exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));
# 554 "/usr/include/stdlib.h" 3 4






extern void _Exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));






extern char *getenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;




extern char *__secure_getenv (__const char *__name)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;





extern int putenv (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (__const char *__name, __const char *__value, int __replace)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__));
# 606 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
# 620 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 642 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 663 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
# 712 "/usr/include/stdlib.h" 3 4





extern int system (__const char *__command) ;

# 734 "/usr/include/stdlib.h" 3 4
extern char *realpath (__const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__)) ;






typedef int (*__compar_fn_t) (__const void *, __const void *);
# 752 "/usr/include/stdlib.h" 3 4



extern void *bsearch (__const void *__key, __const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 771 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;

# 808 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));







extern int mblen (__const char *__s, size_t __n) __attribute__ ((__nothrow__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__));

extern size_t wcstombs (char *__restrict __s,
   __const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__));








extern int rpmatch (__const char *__response) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
# 896 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *__const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;
# 948 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
# 964 "/usr/include/stdlib.h" 3 4

# 8 "ln_helper.h" 2
# 1 "/usr/include/stdio.h" 1 3 4
# 30 "/usr/include/stdio.h" 3 4




# 1 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 1 3 4
# 35 "/usr/include/stdio.h" 2 3 4
# 45 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 65 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 75 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 83 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4

typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 53 "/usr/include/_G_config.h" 3 4
typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));
typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));
# 33 "/usr/include/libio.h" 2 3 4
# 53 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 54 "/usr/include/libio.h" 2 3 4
# 170 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 180 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 203 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 271 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 319 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 328 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 364 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 416 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 460 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__));
# 490 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__));
# 76 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 109 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 161 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 162 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (__const char *__filename) __attribute__ ((__nothrow__));

extern int rename (__const char *__old, __const char *__new) __attribute__ ((__nothrow__));




extern int renameat (int __oldfd, __const char *__old, int __newfd,
       __const char *__new) __attribute__ ((__nothrow__));








extern FILE *tmpfile (void) ;
# 206 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__)) ;





extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__)) ;
# 224 "/usr/include/stdio.h" 3 4
extern char *tempnam (__const char *__dir, __const char *__pfx)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 249 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 263 "/usr/include/stdio.h" 3 4






extern FILE *fopen (__const char *__restrict __filename,
      __const char *__restrict __modes) ;




extern FILE *freopen (__const char *__restrict __filename,
        __const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 292 "/usr/include/stdio.h" 3 4

# 303 "/usr/include/stdio.h" 3 4
extern FILE *fdopen (int __fd, __const char *__modes) __attribute__ ((__nothrow__)) ;
# 316 "/usr/include/stdio.h" 3 4
extern FILE *fmemopen (void *__s, size_t __len, __const char *__modes)
  __attribute__ ((__nothrow__)) ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__)) ;






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__));





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__));








extern int fprintf (FILE *__restrict __stream,
      __const char *__restrict __format, ...);




extern int printf (__const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      __const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       __const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 414 "/usr/include/stdio.h" 3 4
extern int vdprintf (int __fd, __const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, __const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     __const char *__restrict __format, ...) ;




extern int scanf (__const char *__restrict __format, ...) ;

extern int sscanf (__const char *__restrict __s,
     __const char *__restrict __format, ...) __attribute__ ((__nothrow__));
# 445 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, __const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf") ;


extern int scanf (__const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf") ;

extern int sscanf (__const char *__restrict __s, __const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__));
# 465 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (__const char *__restrict __s,
      __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 496 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (__const char *__restrict __s, __const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 524 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 552 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 563 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 596 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;






extern char *gets (char *__s) ;

# 658 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;








extern int fputs (__const char *__restrict __s, FILE *__restrict __stream);





extern int puts (__const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (__const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 730 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 766 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 785 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, __const fpos_t *__pos);
# 808 "/usr/include/stdio.h" 3 4

# 817 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__)) ;




extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;








extern void perror (__const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 27 "/usr/include/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern __const char *__const sys_errlist[];
# 847 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__)) ;




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;
# 866 "/usr/include/stdio.h" 3 4
extern FILE *popen (__const char *__command, __const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__));
# 906 "/usr/include/stdio.h" 3 4
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__)) ;


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__));
# 936 "/usr/include/stdio.h" 3 4

# 9 "ln_helper.h" 2
# 1 "/usr/include/string.h" 1 3 4
# 29 "/usr/include/string.h" 3 4





# 1 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 1 3 4
# 35 "/usr/include/string.h" 2 3 4









extern void *memcpy (void *__restrict __dest,
       __const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, __const void *__src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));






extern void *memccpy (void *__restrict __dest, __const void *__restrict __src,
        int __c, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (__const void *__s1, __const void *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 95 "/usr/include/string.h" 3 4
extern void *memchr (__const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


# 126 "/usr/include/string.h" 3 4


extern char *strcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, __const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (__const char *__s1, __const char *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));






# 1 "/usr/include/xlocale.h" 1 3 4
# 28 "/usr/include/xlocale.h" 3 4
typedef struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;


typedef __locale_t locale_t;
# 163 "/usr/include/string.h" 2 3 4


extern int strcoll_l (__const char *__s1, __const char *__s2, __locale_t __l)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern size_t strxfrm_l (char *__dest, __const char *__src, size_t __n,
    __locale_t __l) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));





extern char *strdup (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (__const char *__string, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 210 "/usr/include/string.h" 3 4

# 235 "/usr/include/string.h" 3 4
extern char *strchr (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 262 "/usr/include/string.h" 3 4
extern char *strrchr (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


# 281 "/usr/include/string.h" 3 4



extern size_t strcspn (__const char *__s, __const char *__reject)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (__const char *__s, __const char *__accept)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 314 "/usr/include/string.h" 3 4
extern char *strpbrk (__const char *__s, __const char *__accept)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 342 "/usr/include/string.h" 3 4
extern char *strstr (__const char *__haystack, __const char *__needle)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strtok (char *__restrict __s, __const char *__restrict __delim)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));




extern char *__strtok_r (char *__restrict __s,
    __const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, __const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));
# 397 "/usr/include/string.h" 3 4


extern size_t strlen (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strnlen (__const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strerror (int __errnum) __attribute__ ((__nothrow__));

# 427 "/usr/include/string.h" 3 4
extern int strerror_r (int __errnum, char *__buf, size_t __buflen) __asm__ ("" "__xpg_strerror_r") __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));
# 445 "/usr/include/string.h" 3 4
extern char *strerror_l (int __errnum, __locale_t __l) __attribute__ ((__nothrow__));





extern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern void bcopy (__const void *__src, void *__dest, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int bcmp (__const void *__s1, __const void *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 489 "/usr/include/string.h" 3 4
extern char *index (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 517 "/usr/include/string.h" 3 4
extern char *rindex (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern int ffs (int __i) __attribute__ ((__nothrow__)) __attribute__ ((__const__));
# 536 "/usr/include/string.h" 3 4
extern int strcasecmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (__const char *__s1, __const char *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 559 "/usr/include/string.h" 3 4
extern char *strsep (char **__restrict __stringp,
       __const char *__restrict __delim)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) __attribute__ ((__nothrow__));


extern char *__stpcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
# 646 "/usr/include/string.h" 3 4

# 10 "ln_helper.h" 2
# 1 "/usr/include/assert.h" 1 3 4
# 68 "/usr/include/assert.h" 3 4



extern void __assert_fail (__const char *__assertion, __const char *__file,
      unsigned int __line, __const char *__function)
     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));


extern void __assert_perror_fail (int __errnum, __const char *__file,
      unsigned int __line,
      __const char *__function)
     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));




extern void __assert (const char *__assertion, const char *__file, int __line)
     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));



# 11 "ln_helper.h" 2
# 1 "/usr/include/errno.h" 1 3 4
# 32 "/usr/include/errno.h" 3 4




# 1 "/usr/include/bits/errno.h" 1 3 4
# 25 "/usr/include/bits/errno.h" 3 4
# 1 "/usr/include/linux/errno.h" 1 3 4



# 1 "/usr/include/asm/errno.h" 1 3 4
# 1 "/usr/include/asm-generic/errno.h" 1 3 4



# 1 "/usr/include/asm-generic/errno-base.h" 1 3 4
# 5 "/usr/include/asm-generic/errno.h" 2 3 4
# 1 "/usr/include/asm/errno.h" 2 3 4
# 5 "/usr/include/linux/errno.h" 2 3 4
# 26 "/usr/include/bits/errno.h" 2 3 4
# 47 "/usr/include/bits/errno.h" 3 4
extern int *__errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));
# 37 "/usr/include/errno.h" 2 3 4
# 59 "/usr/include/errno.h" 3 4

# 12 "ln_helper.h" 2
# 1 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include-fixed/limits.h" 1 3 4
# 11 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include-fixed/limits.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include-fixed/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include-fixed/limits.h" 1 3 4
# 122 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include-fixed/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 145 "/usr/include/limits.h" 3 4
# 1 "/usr/include/bits/posix1_lim.h" 1 3 4
# 157 "/usr/include/bits/posix1_lim.h" 3 4
# 1 "/usr/include/bits/local_lim.h" 1 3 4
# 39 "/usr/include/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 40 "/usr/include/bits/local_lim.h" 2 3 4
# 158 "/usr/include/bits/posix1_lim.h" 2 3 4
# 146 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/posix2_lim.h" 1 3 4
# 150 "/usr/include/limits.h" 2 3 4
# 123 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include-fixed/limits.h" 2 3 4
# 8 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include-fixed/syslimits.h" 2 3 4
# 12 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include-fixed/limits.h" 2 3 4
# 13 "ln_helper.h" 2
# 1 "ln.h" 1
# 12 "ln.h"
struct _ln
{
 struct _cell *lsd;
 struct _cell *msd;
 int power;
 int sign;
};
struct _cell
{
 int num;
 struct _cell* lcell;
 struct _cell* hcell;
};

typedef enum{
 newln,
 firstln,
 copy,
 deepcopy,
}res_type;
typedef enum{
 trunc_res,
 round_res
}divide_mode;
typedef struct _ln* ln;
typedef struct _cell* cell;


extern int (*__errno_location ());
# 14 "ln_helper.h" 2
# 24 "ln_helper.h"
ln ln_creat(int cellnum);
# 33 "ln_helper.h"
void ln_free(ln* n);
# 42 "ln_helper.h"
int power10(int power);
# 51 "ln_helper.h"
int ln_checknull(ln n);
# 60 "ln_helper.h"
void ln_info(ln n);
# 71 "ln_helper.h"
ln ln_setval(ln n,int new_value);
# 83 "ln_helper.h"
ln ln_addcell(ln n,int inc_num);
# 95 "ln_helper.h"
int ln_untilcellnum(ln n,cell q);
# 110 "ln_helper.h"
int ln_digitnum(ln n);
# 120 "ln_helper.h"
int ln_pointnum(ln n,cell q);
# 131 "ln_helper.h"
ln ln_copy(ln a,ln b);
# 144 "ln_helper.h"
int ln_cmp(ln a,ln b);
# 157 "ln_helper.h"
int ln_cmp_abs(ln a,ln b);
# 171 "ln_helper.h"
int ln_cmp_int(ln a,int b);
# 181 "ln_helper.h"
int ln_checkstr(const char* str);
# 190 "ln_helper.h"
void ln_stripleadingzero(ln n);
# 199 "ln_helper.h"
void ln_stripendingzero(ln n);
# 210 "ln_helper.h"
int ln_endingzeronum(ln n);
# 223 "ln_helper.h"
ln ln_fix(ln n,int precision,divide_mode mode);
# 233 "ln_helper.h"
ln ln_invcell(ln n);
# 244 "ln_helper.h"
ln ln_adjustcell(ln n);
# 255 "ln_helper.h"
ln ln_adjustpower(ln n,int inc_power);
# 266 "ln_helper.h"
ln str2ln(ln n,const char* str);
# 277 "ln_helper.h"
char* ln2str(ln n);
# 286 "ln_helper.h"
void ln_output(ln n);
# 5 "ln_helper.c" 2
# 14 "ln_helper.c"
ln ln_creat(int cellnum)
{
 ln n;
 int i;
 cell p;


 n=(ln)malloc(sizeof(struct _ln));
 if(!n)
 {
  fprintf(stderr,"[%s %d] %s malloc error,reason: %s\n","ln_helper.c",24,__FUNCTION__,strerror((*__errno_location ())));
  return ((void *)0);
 }

 n->lsd=((void *)0);
 n->msd=((void *)0);
 n->power=0;
 n->sign=1;

 for(i=0;i<cellnum;i++)
 {
  p=(cell)malloc(sizeof(struct _cell));
  if(!p)
  {
   fprintf(stderr,"[%s %d] %s malloc error,reason: %s\n","ln_helper.c",38,__FUNCTION__,strerror((*__errno_location ())));
   ln_free(&n);
   return ((void *)0);
  }
  p->num=0;
  if(!n->lsd)
  {
   n->lsd=p;
   p->hcell=p;
   p->lcell=p;
  }
  else
  {
   p->hcell=n->lsd;
   p->lcell=n->lsd->lcell;
   n->lsd->lcell->hcell=p;
   n->lsd->lcell=p;
   n->lsd=p;
  }
 }
 n->msd=n->lsd;
 return n;
}
# 69 "ln_helper.c"
void ln_free(ln* n)
{
 cell p;
 if(n==((void *)0))
 {
  fprintf(stderr,"[%s %d] %s error,reason: n=NULL\n","ln_helper.c",74,__FUNCTION__);
  return;
 }

 if(ln_checknull(*n)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",80,__FUNCTION__);
  return;
 }


 p=(*n)->lsd;
 if(p)
 {
  while(p!=(*n)->lsd->lcell)
  {
   p=p->hcell;
   free(p->lcell);
  }
  free(p);
 }
 free(*n);
 *n=((void *)0);
 return;
}
# 108 "ln_helper.c"
int power10(int power)
{
 int i;
 int base=10;
 int res=1;
 if(power<0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: power <0\n","ln_helper.c",115,__FUNCTION__);
  return -1;
 }
 else if(power==0)
  return 1;
 else if(power==1)
  return base;
 else
 {
  for(i=0;i<power;i++)
   res*=base;
  return res;
 }
}
# 138 "ln_helper.c"
int ln_checknull(ln n)
{
 if(n==((void *)0))
 {
  fprintf(stderr,"[%s %d] %s error,reason:n=NULL\n","ln_helper.c",142,__FUNCTION__);
  return -1;
 }

 if(n->sign !=-1 && n->sign !=0 && n->sign !=1)
 {
  fprintf(stderr,"[%s %d] %s error,reason:invalid sign [%d]\n","ln_helper.c",148,__FUNCTION__,n->sign);
  return -1;
 }

 if(n->msd==((void *)0))
 {
  fprintf(stderr,"[%s %d] %s error,reason:n->msd=NULL\n","ln_helper.c",154,__FUNCTION__);
  return -1;
 }

 if(n->lsd==((void *)0))
 {
  fprintf(stderr,"[%s %d] %s error,reason:n->lsd=NULL\n","ln_helper.c",160,__FUNCTION__);
  return -1;
 }
 return 0;
}
# 174 "ln_helper.c"
void ln_info(ln n)
{
 cell p=n->lsd;
 if(ln_checknull(n) !=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason:ln_checknull fail\n","ln_helper.c",179,__FUNCTION__);
  return;
 }
 printf("ln_addr=%d sign=%d \n",(int)n,n->sign);
 printf("ln_addr=%d power=%d \n",(int)n,n->power);
 if(p)
 {
  while(p!=n->msd)
  {
   printf("num_addr=%d num=%d \n",(int)p,p->num);
   p=p->hcell;
  }
  printf("num_addr=%d num=%d \n",(int)p,p->num);
 }
 else
         printf("ln_addr=%d not num",(int)n);
 return;
}
# 207 "ln_helper.c"
ln ln_setval(ln n,int new_value)
{
 int flag;
 cell p=((void *)0);
 if(!n)
 {
  n=ln_creat(5);
  if(!n)
  {
   fprintf(stderr,"[%s %d] %s error,reason:ln_creat fail\n","ln_helper.c",216,__FUNCTION__);
   return ((void *)0);
  }
 }

 flag=0;
 if(new_value==(-2147483647 - 1))
 {
  new_value=2147483647;
  flag=1;
 }
 if(new_value<0)
 {
  n->sign=-1;
  new_value=-new_value;
 }
 else
  n->sign=1;
 n->power=0;
 p=n->lsd;
 while(1)
 {
  p->num=new_value%10000;
  new_value=new_value/10000;
  if(new_value !=0)
  {
   if(p->hcell==n->lsd)
   {
    if(ln_addcell(n,5)==((void *)0))
    {
     fprintf(stderr,"[%s %d] %s error,reason:ln_addcell fail\n","ln_helper.c",246,__FUNCTION__);
     return ((void *)0);
    }
   }
   p=p->hcell;
  }
  else
  {
   n->msd=p;
   break;
  }
 }

 if(flag==1)
 {
  n->lsd->num++;
  n->sign=-1;
 }
 return n;
}
# 276 "ln_helper.c"
ln ln_addcell(ln n,int inc_num)
{
 cell p;


 if(ln_checknull(n) !=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason:ln_checknull fail\n","ln_helper.c",283,__FUNCTION__);
  return ((void *)0);
 }
 if(inc_num<=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason:inc_num<=0\n","ln_helper.c",288,__FUNCTION__);
  return ((void *)0);
 }


 while(inc_num)
 {
  p=(cell)malloc(sizeof(struct _cell));
  if(!p)
  {
   fprintf(stderr,"[%s %d] ln_addcell malloc error,reason: %s\n","ln_helper.c",298,strerror((*__errno_location ())));
   return ((void *)0);
  }
  p->hcell=n->lsd;
  p->lcell=n->lsd->lcell;
  n->lsd->lcell->hcell=p;
  n->lsd->lcell=p;
  p->num=0;
  inc_num--;
 }
 return n;
}
# 320 "ln_helper.c"
int ln_untilcellnum(ln n,cell q)
{
 int i=1;
 cell p=n->lsd;
 if(ln_checknull(n) !=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",326,__FUNCTION__);
  return -1;
 }
 while(p!=q)
 {
  p=p->hcell;
  if(p==n->lsd)
  {
   fprintf(stderr,"[%s %d] %s error,reason: invalid cell\n","ln_helper.c",334,__FUNCTION__);
   return -1;
  }
  i++;
 }
 return i;
}
# 353 "ln_helper.c"
int ln_digitnum(ln n)
{
 int i,j;
 cell p;


 if(ln_checknull(n) !=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",361,__FUNCTION__);
  return -1;
 }


 ln_stripleadingzero(n);


 i=ln_untilcellnum(n,(n)->msd);
 if(i==-1)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_cellnum fail\n","ln_helper.c",372,__FUNCTION__);
  return -1;
 }
 i=(i-1)*4;


 p=n->msd;
 j=1;
 while(j<=p->num)
 {
  i++;
  j*=10;
 }
 return i;
}
# 397 "ln_helper.c"
int ln_pointnum(ln n,cell q)
{
 int pointnum;
 cell p;

 if(ln_checknull(n) !=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",404,__FUNCTION__);
  return -1;
 }

 if(n->msd->num==0)
 {
  if(n->msd==n->lsd)
   return 0;
  else
  {
   fprintf(stderr,"[%s %d] %s error,reason: addr num %d\n","ln_helper.c",414,__FUNCTION__,(int)&(n->msd->num));
   fprintf(stderr,"[%s %d] %s error,reason: n format error,n has leading zeros\n","ln_helper.c",415,__FUNCTION__);
   return -1;
  }
 }
 pointnum=-n->power;
 p=n->lsd;
 while(p!=q)
 {
  p=p->hcell;
  pointnum-=4;
 }
 return pointnum;
}
# 442 "ln_helper.c"
ln ln_copy(ln a,ln b)
{
 cell p,q;
 int cellnum_a;
 int cellnum_b;


 if(ln_checknull(b) !=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",451,__FUNCTION__);
  return ((void *)0);
 }

 cellnum_b=ln_untilcellnum(b,(b)->msd);
 if(cellnum_b==-1)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_cellnum fail\n","ln_helper.c",458,__FUNCTION__);
  return ((void *)0);
 }

 if(!a)
 {
  a=ln_creat(cellnum_b);
  if(a==((void *)0))
  {
   fprintf(stderr,"[%s %d] %s error,reason: ln_creat fail\n","ln_helper.c",467,__FUNCTION__);
   return ((void *)0);
  }
 }
 else
 {
  if(ln_checknull(a) !=0)
  {
   fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",475,__FUNCTION__);
   return ((void *)0);
  }

  cellnum_a=ln_untilcellnum(a,(a)->msd);
  if(cellnum_a==-1)
  {
   fprintf(stderr,"[%s %d] %s error,reason: ln_cellnum fail\n","ln_helper.c",482,__FUNCTION__);
   return ((void *)0);
  }

  if(cellnum_b>cellnum_a)
  {
   if(ln_addcell(a,cellnum_b-cellnum_a)==((void *)0))
   {
    fprintf(stderr,"[%s %d] %s error,reason: ln_addsize fail\n","ln_helper.c",490,__FUNCTION__);
    return ((void *)0);
   }
  }
 }
 a->sign=b->sign;
 a->power=b->power;
 p=a->lsd;
 q=b->lsd;
 while(cellnum_b>0)
 {
  p->num=q->num;
  p=p->hcell;
  q=q->hcell;
  cellnum_b--;
 }
 a->msd=p->lcell;
 return a;
}
# 522 "ln_helper.c"
int ln_cmp(ln a,ln b)
{
 int res;
 cell p,q;


 if(ln_checknull(a)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",530,__FUNCTION__);
  return -2;
 }
 if(ln_checknull(b)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",535,__FUNCTION__);
  return -2;
 }

 ln_stripleadingzero(a);
 ln_stripleadingzero(b);

 if(a->msd->num==0 && b->msd->num==0)
  return 0;
 if(a->msd->num==0)
 {
  if(b->sign==1)
   return -1;
  else
   return 1;
 }
 if(b->msd->num==0)
 {
  if(a->sign==1)
   return 1;
  else
   return -1;
 }


 if(a->sign > b->sign)
  return 1;
 else if(a->sign < b->sign)
  return -1;



 if(a->power > b->power)
  ln_adjustpower(a,b->power-a->power);
 if(a->power < b->power)
  ln_adjustpower(b,a->power-b->power);

 p=a->lsd;
 q=b->lsd;
 res=0;
 while(1)
 {
  if(p->num>q->num)
   res=1;
  else if(p->num<q->num)
   res=-1;
  if(p==a->msd)
  {
   if(q!=b->msd)
    res=-1;
   break;
  }
  if(q==b->msd)
  {
   if(p!= a->msd)
    res=1;
   break;
  }
  p=p->hcell;
  q=q->hcell;
 }
 if(a->sign==-1)
  res*=-1;
 return res;
}
# 612 "ln_helper.c"
int ln_cmp_abs(ln a,ln b)
{
 int res;
 int sign_a,sign_b;


 if(ln_checknull(a)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",620,__FUNCTION__);
  return -2;
 }
 if(ln_checknull(b)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",625,__FUNCTION__);
  return -2;
 }


 sign_a=a->sign;
 sign_b=b->sign;

 a->sign=1;
 b->sign=1;
 res=ln_cmp(a,b);

 a->sign=sign_a;
 b->sign=sign_b;
 return res;
}
# 654 "ln_helper.c"
int ln_cmp_int(ln a,int b)
{
 int res;
 ln c;

 if(ln_checknull(a)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",661,__FUNCTION__);
  return -2;
 }
 c=ln_setval(((void *)0),b);
 if(c==((void *)0))
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_init fail\n","ln_helper.c",667,__FUNCTION__);
  return -2;
 }
 res=ln_cmp(a,c);
 ln_free(&c);
 return res;
}
# 683 "ln_helper.c"
int ln_checkstr(const char* str)
{
 int haspoint=0;

 if(str==((void *)0))
 {
  fprintf(stderr,"[%s %d] %s error,reason: str=NULL","ln_helper.c",689,__FUNCTION__);
  return -1;

 }

 if(*str!='+' && *str!='-' && (*str<'0' || *str>'9'))
 {
  fprintf(stderr,"[%s %d] %s error,reason: invalid first char (%c)\n","ln_helper.c",696,__FUNCTION__,*str);
  return -1;
 }
 str++;
 while(*str)
 {
  if(*str !='.' && (*str<'0' || *str>'9'))
  {
   fprintf(stderr,"[%s %d] %s error,reason: invalid char (%c)\n","ln_helper.c",704,__FUNCTION__,*str);
   return -1;
  }
  if(*str=='.')
  {
   if(haspoint==0)
    haspoint=1;
   else
   {
    fprintf(stderr,"[%s %d] %s error,reason: mutiple points\n","ln_helper.c",713,__FUNCTION__);
    return -1;
   }
  }
  str++;
 }
 if(haspoint==1)
 {
  if(str[-1]<'0' || str[-1]>'9')
  {
   fprintf(stderr,"[%s %d] %s error,reason: point is the last char\n","ln_helper.c",723,__FUNCTION__);
   return -1;
  }
 }
 return 0;
}
# 737 "ln_helper.c"
void ln_stripleadingzero(ln n)
{
 cell p;
 if(ln_checknull(n)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",742,__FUNCTION__);
  return;
 }
 p=n->msd;
 while(p->num==0 && p != n->lsd)
  p=p->lcell;
 n->msd=p;
 return;
}
# 759 "ln_helper.c"
void ln_stripendingzero(ln n)
{
 cell p;
 if(ln_checknull(n)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",764,__FUNCTION__);
  return;
 }
 p=n->lsd;
 while(p->num==0 && p != n->msd)
 {
  p=p->hcell;
  n->power+=4;
 }
 n->lsd=p;
 return;
}
# 786 "ln_helper.c"
int ln_endingzeronum(ln n)
{
 cell p;
 int i,j;
 if(ln_checknull(n)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",792,__FUNCTION__);
  return -1;
 }


 ln_stripleadingzero(n);
 if(n->msd->num==0)
  return 0;

 i=0;
 p=n->lsd;
 while(1)
 {
  if(p->num==0)
   i+=4;
  else
  {
   j=10;
   while(p->num%j==0)
   {
    i++;
    j*=10;
   }
   return i;
  }
  p=p->hcell;
 }
 return i;
}
# 833 "ln_helper.c"
ln ln_fix(ln n,int precision,divide_mode mode)
{
 int pointnum;
 int power;
 cell p;

 if(ln_checknull(n)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",841,__FUNCTION__);
  return ((void *)0);
 }

 if(precision<0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: precision error\n","ln_helper.c",847,__FUNCTION__);
  return ((void *)0);
 }

 ln_stripleadingzero(n);

 ln_adjustpower(n,ln_endingzeronum(n));

 ln_stripleadingzero(n);


 pointnum=ln_pointnum(n,n->lsd);
 if(pointnum==-1)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_pointnum fail\n","ln_helper.c",861,__FUNCTION__);
  return ((void *)0);
 }


 if(precision >=pointnum)
  return n;


 if(n->lsd==n->msd)
 {
  p=n->lsd;
  power=power10(pointnum-precision);
  if(mode==trunc_res)
   p->num-=p->num%power;
  else
  {
   if(p->num%power>=5*power/10)
    p->num=(p->num/power+1)*power;
   else
    p->num-=p->num%power;
  }

 }
 else
 {
  p=n->lsd;
  while(pointnum>precision)
  {
   p=p->hcell;
   pointnum-=4;
  }
  if(pointnum==precision)
  {
   if(mode==round_res && p->lcell->num>=10000/2)
    p->num++;
  }
  else
  {
   p=p->lcell;
   power=power10(4 +pointnum-precision);
   if(mode==trunc_res)
   {
    p->num-=p->num%power;
   }
   else
   {
    if(p->num%power>=5*power/10)
     p->num=(p->num/power+1)*power;
    else
     p->num-=p->num%power;
   }
  }

  if(p!=n->lsd)
  {
   do
   {
    p=p->lcell;
    p->num=0;
   }
   while(p!=n->lsd);
  }
 }

 p=n->lsd;
 while(1)
 {
  if(p->num>=10000)
  {
   p->num-=10000;
   if(p==n->msd)
   {
    if(ln_addcell(n,5) !=((void *)0))
    {
     fprintf(stderr,"[%s %d] %s error,reason: ln_addcell fail\n","ln_helper.c",936,__FUNCTION__);
     return ((void *)0);
    }
    n->msd=p->hcell;
    n->msd->num=1;
    break;
   }
   else
   {
    p=p->hcell;
    p->num+=1;
   }

  }
  else
   break;
 }
 return n;
}
# 964 "ln_helper.c"
ln ln_invcell(ln n)
{
 cell p;
 if(ln_checknull(n)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",969,__FUNCTION__);
  return ((void *)0);
 }
 p=n->msd;
 while(p!=n->lsd)
 {
  p->num=-(p->num);
  p=p->lcell;
 }
 p->num=-(p->num);
 return n;
}
# 991 "ln_helper.c"
ln ln_adjustpower(ln n,int inc_power)
{
 int a;
 int res,carry;
 int zeronum;
 cell p;


 if(ln_checknull(n) !=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",1001,__FUNCTION__);
  return ((void *)0);
 }


 if(ln_cmp_int(n,0)==0)
 {

  n->power+=inc_power;
  return n;
 }

 if(inc_power==0)
  return n;
 if(inc_power<0)
 {

  n->power+=inc_power;

  inc_power*=-1;


  a=power10(inc_power%4);
  p=n->lsd;
  res=0;
  carry=0;
  while(1)
  {
   res=a*p->num+carry;
   p->num=res%10000;
   carry=res/10000;
   if(p==n->msd)
   {
    if(carry>0)
    {
     if(n->lsd->lcell ==n->msd)
     {
      if(ln_addcell(n,5) ==((void *)0))
      {
       fprintf(stderr,"[%s %d] %s error,reason: ln_addcell fail\n","ln_helper.c",1040,__FUNCTION__);
       return ((void *)0);
      }
     }
     p->hcell->num=carry;
     n->msd=p->hcell;
    }
    break;
   }
   p=p->hcell;
  }

  inc_power-=inc_power%4;
  while(inc_power>0)
  {
   if(n->lsd->lcell !=n->msd)
   {
    n->lsd=n->lsd->lcell;
    n->lsd->num=0;
    inc_power-=4;
   }
   else
   {
    if(ln_addcell(n,inc_power/4)==((void *)0))
    {
     fprintf(stderr,"[%s %d] %s error,reason: ln_addcell fail\n","ln_helper.c",1065,__FUNCTION__);
     return ((void *)0);
    }
    n->lsd=n->msd->hcell;
    break;
   }
  }
 }
 else
 {

  zeronum=ln_endingzeronum(n);
  if(zeronum==-1)
  {
   fprintf(stderr,"[%s %d] %s error,reason: ln_endingzeronum fail\n","ln_helper.c",1079,__FUNCTION__);
   return ((void *)0);
  }

  if(inc_power>zeronum)
  {
   fprintf(stderr,"[%s %d] %s error,reason: inc_power too large (%d)\n","ln_helper.c",1085,__FUNCTION__,inc_power);
   return ((void *)0);
  }

  n->power+=inc_power;


  p=n->lsd;
  while(p->num==0 && inc_power>=4)
  {
   inc_power-=4;
   p=p->hcell;
  }
  n->lsd=p;


  if(inc_power==0)
   return n;

  a=power10(inc_power);
  p=n->msd;
  res=0;
  carry=0;
  while(1)
  {
   res=p->num+carry*10000;
   p->num=res/a;
   carry=res%a;
   if(p==n->lsd)
    break;
   p=p->lcell;
  }
 }
 return n;
}
# 1130 "ln_helper.c"
ln str2ln(ln n,const char* str)
{
 int i;
 const char *lastdigit,*point;
 cell p;


 if(n==((void *)0))
 {
  n=ln_creat(5);
  if(n==((void *)0))
  {
   fprintf(stderr,"[%s %d] %s error,reason: ln_creat fail\n","ln_helper.c",1142,__FUNCTION__);
   return ((void *)0);
  }
 }
 else
 {
  if(ln_checknull(n) !=0)
  {
   fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",1150,__FUNCTION__);
   return ((void *)0);
  }
 }


 if(ln_checkstr(str) !=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checkstr fail\n","ln_helper.c",1158,__FUNCTION__);
  return ((void *)0);
 }


 if(*str=='-')
  n->sign=-1;
 else
  n->sign=1;


 lastdigit=str+strlen(str)-1;
 point=strstr(str,".");


 if(*str=='+' || *str=='-')
  str++;

 while(str != lastdigit && *str=='0')
  str++;

 if(*str=='.')
  str--;


 if(point !=((void *)0))
 {
  while(*lastdigit=='0')
   lastdigit--;
  if(*lastdigit=='.')
  {
   lastdigit--;
   point=((void *)0);
  }
 }


 n->power=0;
 if(point !=((void *)0))
  n->power=point-lastdigit;
 else if(*lastdigit=='0' && lastdigit !=str)
 {
  while(*lastdigit=='0')
  {
   lastdigit--;
   n->power++;
  }
 }

 i=1;
 p=n->lsd;
 p->num=0;

 if(point !=((void *)0))
 {

  if(*str=='0' && *(str+1)=='.')
   str+=2;
  while(*str =='0')
   str++;
 }

 while(lastdigit>=str)
 {
  if(*lastdigit!='.')
  {
   p->num+=(*lastdigit-'0')*i;
   lastdigit--;
   if(i*10==10000)
   {
    if(lastdigit>=str)
    {
     i=1;
     if(p->hcell==n->lsd)
     {
      if(ln_addcell(n,(lastdigit-str+1)/4 +1)==((void *)0))
      {
       fprintf(stderr,"[%s %d] %s error,reason: ln_addcell fail\n","ln_helper.c",1235,__FUNCTION__);
       return ((void *)0);
      }
     }
     p=p->hcell;
     p->num=0;
    }
    else
     break;
   }
   else
    i*=10;
  }
  else
   lastdigit--;
 }
 n->msd=p;
 return n;
}
# 1264 "ln_helper.c"
char* ln2str(ln n)
{
 extern int (*__errno_location ());
 cell a;
 char *p,*str;
 int size;
 int i,power;
 int cellnum;
 int zeronum;
 int digitnum;


 if(ln_checknull(n)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",1278,__FUNCTION__);
  return ((void *)0);
 }


 ln_stripleadingzero(n);
 zeronum=ln_endingzeronum(n);
 if(zeronum==-1)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_endingzeronum fail\n","ln_helper.c",1287,__FUNCTION__);
  return ((void *)0);
 }


 if(ln_adjustpower(n,zeronum)==((void *)0))
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_adjustpower fail\n","ln_helper.c",1294,__FUNCTION__);
  return ((void *)0);
 }


 if(ln_cmp_int(n,0)==0)
 {
  str=strdup("0");
  if(str==((void *)0))
  {
   fprintf(stderr,"[%s %d] %s strdup error,reason: %s\n","ln_helper.c",1304,__FUNCTION__,strerror((*__errno_location ())));
   return ((void *)0);
  }
  return str;
 }


 if(n->power>=0)
 {
  cellnum=ln_untilcellnum(n,(n)->msd);

  str=(char*)malloc(cellnum*4 +n->power+10);
  if(str==((void *)0))
  {
   fprintf(stderr,"[%s %d] %s malloc error,reason: %s\n","ln_helper.c",1318,__FUNCTION__,strerror((*__errno_location ())));
   return ((void *)0);
  }

  p=str;

  if(n->sign==-1)
   *p++='-';


  a=n->msd;
  i=10000/10;
  while(i)
  {
   while(a->num<i)
    i/=10;
   *p++=(a->num/i)%10+'0';
   i/=10;
  }

  while(a!=n->lsd)
  {
   a=a->lcell;
   i=10000/10;
   while(i)
   {
    *p++=(a->num/i)%10+'0';
    i/=10;
   }
  }
  for(i=0;i<n->power;i++)
   *p++='0';
  *p='\0';
 }
 else
 {

  digitnum=ln_digitnum(n);
  if(digitnum==-1)
  {
   fprintf(stderr,"[%s %d] %s ln_digitnum error,reason: %s\n","ln_helper.c",1358,__FUNCTION__,strerror((*__errno_location ())));
   return ((void *)0);
  }

  power=-n->power;
  if(digitnum>power)
   size=digitnum+1+1;
  else
   size=power+2+1;

  if(n->sign==-1)
   size++;


  str=(char*)malloc(size);
  if(!str)
  {
   fprintf(stderr,"[%s %d] %s malloc error,reason: %s\n","ln_helper.c",1375,__FUNCTION__,strerror((*__errno_location ())));
   return ((void *)0);
  }
  p=str+size-1;
  *p--='\0';

  a=n->lsd;
  i=1;
  while(a!=n->msd)
  {
   *p--=(a->num/i)%10+'0';
   i*=10;
   if(i==10000)
   {
    i=1;
    a=a->hcell;
   }
   power--;
   if(power==0)
    *p--='.';
  }


  i=1;
  while(i<=a->num)
  {
   *p--=(a->num/i)%10+'0';
   power--;
   if(power==0)
    *p--='.';
   i*=10;
  }


  while(power>0)
  {
   *p--='0';
   power--;
   if(power==0)
    *p--='.';
  }


  if(*(p+1)=='.')
   *p--='0';
  if(n->sign==-1)
   *str='-';
 }
 return str;
}
# 1433 "ln_helper.c"
void ln_output(ln n)
{
 char* p;

 if(ln_checknull(n)!=0)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln_checknull fail\n","ln_helper.c",1439,__FUNCTION__);
  return;
 }
 p=ln2str(n);
 if(!p)
 {
  fprintf(stderr,"[%s %d] %s error,reason: ln2str fail\n","ln_helper.c",1445,__FUNCTION__);
  return;
 }
 puts(p);
 free(p);
 return;
}
